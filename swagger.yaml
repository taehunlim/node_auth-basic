
openapi: 3.0.0
info:
  title: Node.js Test
  description: Test
  version: 1.0.0

servers:
  - url: http://localhost:5000
    description: local test

paths:

  /account/register:
    post:
      summary: Register a new user account and send a verification email
      description: The first account registered in the system is assigned the `Admin` role, other accounts are assigned the `User` role.
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Mr"
                firstName:
                  type: string
                  example: "Jason"
                lastName:
                  type: string
                  example: "Watmore"
                email:
                  type: string
                  example: "jason@example.com"
                password:
                  type: string
                  example: "pass123"
                confirmPassword:
                  type: string
                  example: "pass123"
                acceptTerms:
                  type: boolean
              required:
                - title
                - firstName
                - lastName
                - email
                - password
                - confirmPassword
                - acceptTerms
      responses:
        "200":
          description: The registration request was successful and a verification email has been sent to the specified email address
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Registration successful, please check your email for verification instructions"

  /account/verify-email:
    post:
      summary: verification email
      operationId: verify-email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: "eyJpZCI6IjYwMTY1ZDcwYWViOGM5MDUyMDQwODI2ZiIsImlhdCI6MTYxMjA4NjY3MCwiZXhwIjoxNjEyMDg4NDcwfQ.BwmKXD-oo89JeFAafamwRv8GEpe3SQ7kMzzG75A2mZM"
              required:
                - token
      responses:
        "200":
          description: The verification email request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "successful verification"

        "400":
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Verification failed"

  /account/authenticate:
    post:
      summary: authenticate
      operationId: authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "dsa123@naver.com"
                password:
                  type: string
                  example: "asd123"
              required:
                - email
                - password
      responses:
        "200":
          description: successful Login
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "6016829ddc7fe60b981ef11b"
                  title:
                    type: string
                    example: "Mr"
                  firstName:
                    type: string
                    example: "lim"
                  lastName:
                    type: string
                    example: "tae"
                  email:
                    type: string
                    example: dsa123@naver.com
                  role:
                    type: string
                    example: "user"
                  jwtToken:
                    type: string
                    example: "eyJpZCI6IjYwMTY1ZDcwYWViOGM5MDUyMDQwODI2ZiIsImlhdCI6MTYxMjA4NjY3MCwiZXhwIjoxNjEyMDg4NDcwfQ.BwmKXD-oo89JeFAafamwRv8GEpe3SQ7kMzzG75A2mZM"
                  verified:
                    type: string
                    example: "2021-01-31T10:13:58.140Z"
                required:
                  - id
                  - title
                  - firstName
                  - lastname
                  - email
                  - role
                  - verified
                  - jwtToken

        "400":
          description: Email or Password is incorrect
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email or Password is incorrect"

  /account/forgot-password:
    post:
      summary: forgot-password
      operationId: forgot-password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "dsa123@naver.com"

      responses:
        "200":
          description: Please check your email for password reset
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Please check your email for password reset"

        "400":
          description: No user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No User"

  /account/reset-password:
    put:
      summary: reset-password
      operationId: reset-password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "asd123"
                confirmPassword:
                  type: string
                  example: "asd123"
                token:
                  type: string
                  example: "c13d840431c2bd6ab4a6680c318f50f496137a31aadee59e820f07bb07f24421fd963bb800bcd959"

      responses:
        "200":
          description: successful change password, you can now log in
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "successful change password, you can now log in"

        "400":
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid token"
